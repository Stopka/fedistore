/**
 * This file was generated by Nexus Schema
 * Do not make changes to this file directly
 */


import type { Context } from "./../../context/Context"
import type { core } from "nexus"
declare global {
  interface NexusGenCustomInputMethods<TypeName extends string> {
    dateTime<FieldName extends string>(fieldName: FieldName, opts?: core.CommonInputFieldConfig<TypeName, FieldName>): void // "DateTime";
  }
}
declare global {
  interface NexusGenCustomOutputMethods<TypeName extends string> {
    dateTime<FieldName extends string>(fieldName: FieldName, ...opts: core.ScalarOutSpread<TypeName, FieldName>): void // "DateTime";
  }
}


declare global {
  interface NexusGen extends NexusGenTypes {}
}

export interface NexusGenInputs {
  FeedQueryInput: { // input type
    search: string; // String!
  }
  NodeQueryInput: { // input type
    search: string; // String!
    sortBy: NexusGenEnums['NodeSortingByEnum'] | null; // NodeSortingByEnum
    sortWay: NexusGenEnums['SortingWayEnum'] | null; // SortingWayEnum
  }
  PagingInput: { // input type
    page: number; // Int!
  }
  StatsQueryInput: { // input type
    sortBy: NexusGenEnums['StatsSortingByEnum'] | null; // StatsSortingByEnum
    sortWay: NexusGenEnums['SortingWayEnum'] | null; // SortingWayEnum
  }
}

export interface NexusGenEnums {
  FeedTypeEnum: "account" | "channel"
  NodeSortingByEnum: "accountFeedCount" | "domain" | "halfYearActiveUserCount" | "monthActiveUserCount" | "openRegistrations" | "refreshedAt" | "softwareName" | "statusesCount" | "totalUserCount"
  SortingWayEnum: "asc" | "desc"
  StatsSortingByEnum: "accountFeedCount" | "channelFeedCount" | "nodeCount" | "softwareName"
}

export interface NexusGenScalars {
  String: string
  Int: number
  Float: number
  Boolean: boolean
  ID: string
  DateTime: any
}

export interface NexusGenObjects {
  Feed: { // root type
    avatar?: string | null; // String
    bot?: boolean | null; // Boolean
    createdAt?: NexusGenScalars['DateTime'] | null; // DateTime
    description: string; // String!
    displayName: string; // String!
    domain: string; // String!
    fields: NexusGenRootTypes['Field'][]; // [Field!]!
    followersCount?: number | null; // Int
    followingCount?: number | null; // Int
    foundAt: NexusGenScalars['DateTime']; // DateTime!
    lastStatusAt?: NexusGenScalars['DateTime'] | null; // DateTime
    locked: boolean; // Boolean!
    name: string; // String!
    refreshedAt?: NexusGenScalars['DateTime'] | null; // DateTime
    statusesCount?: number | null; // Int
    type: NexusGenEnums['FeedTypeEnum']; // FeedTypeEnum!
    url: string; // String!
  }
  FeedList: { // root type
    items: NexusGenRootTypes['Feed'][]; // [Feed!]!
    paging: NexusGenRootTypes['Paging']; // Paging!
  }
  Field: { // root type
    name: string; // String!
    value: string; // String!
  }
  GeoIp: { // root type
    city_name?: string | null; // String
    continent_name?: string | null; // String
    country_iso_code?: string | null; // String
    country_name?: string | null; // String
    location?: string | null; // String
    region_iso_code?: string | null; // String
    region_name?: string | null; // String
  }
  Node: { // root type
    accountFeedCount?: number | null; // Int
    channelFeedCount?: number | null; // Int
    domain: string; // String!
    foundAt: NexusGenScalars['DateTime']; // DateTime!
    geoip?: NexusGenRootTypes['GeoIp'] | null; // GeoIp
    halfYearActiveUserCount?: number | null; // Int
    monthActiveUserCount?: number | null; // Int
    name?: string | null; // String
    openRegistrations?: boolean | null; // Boolean
    refreshAttemptedAt?: NexusGenScalars['DateTime'] | null; // DateTime
    refreshedAt?: NexusGenScalars['DateTime'] | null; // DateTime
    serverIps?: string[] | null; // [String!]
    softwareName?: string | null; // String
    softwareVersion?: string | null; // String
    standardizedSoftwareVersion?: string | null; // String
    statusesCount?: number | null; // Int
    totalUserCount?: number | null; // Int
  }
  NodeList: { // root type
    items: NexusGenRootTypes['Node'][]; // [Node!]!
    paging: NexusGenRootTypes['Paging']; // Paging!
  }
  Paging: { // root type
    hasNext: boolean; // Boolean!
  }
  Query: {};
  Sorting: { // root type
    by: string; // String!
    way: NexusGenEnums['SortingWayEnum']; // SortingWayEnum!
  }
  Stats: { // root type
    accountFeedCount: number; // Int!
    channelFeedCount: number; // Int!
    nodeCount: number; // Int!
    softwareName: string; // String!
  }
  StatsList: { // root type
    items: NexusGenRootTypes['Stats'][]; // [Stats!]!
  }
}

export interface NexusGenInterfaces {
}

export interface NexusGenUnions {
}

export type NexusGenRootTypes = NexusGenObjects

export type NexusGenAllTypes = NexusGenRootTypes & NexusGenScalars & NexusGenEnums

export interface NexusGenFieldTypes {
  Feed: { // field return type
    avatar: string | null; // String
    bot: boolean | null; // Boolean
    createdAt: NexusGenScalars['DateTime'] | null; // DateTime
    description: string; // String!
    displayName: string; // String!
    domain: string; // String!
    fields: NexusGenRootTypes['Field'][]; // [Field!]!
    followersCount: number | null; // Int
    followingCount: number | null; // Int
    foundAt: NexusGenScalars['DateTime']; // DateTime!
    id: string; // ID!
    lastStatusAt: NexusGenScalars['DateTime'] | null; // DateTime
    locked: boolean; // Boolean!
    name: string; // String!
    node: NexusGenRootTypes['Node']; // Node!
    parent: NexusGenRootTypes['Feed'] | null; // Feed
    refreshedAt: NexusGenScalars['DateTime'] | null; // DateTime
    statusesCount: number | null; // Int
    type: NexusGenEnums['FeedTypeEnum']; // FeedTypeEnum!
    url: string; // String!
  }
  FeedList: { // field return type
    items: NexusGenRootTypes['Feed'][]; // [Feed!]!
    paging: NexusGenRootTypes['Paging']; // Paging!
  }
  Field: { // field return type
    name: string; // String!
    value: string; // String!
  }
  GeoIp: { // field return type
    city_name: string | null; // String
    continent_name: string | null; // String
    country_iso_code: string | null; // String
    country_name: string | null; // String
    location: string | null; // String
    region_iso_code: string | null; // String
    region_name: string | null; // String
  }
  Node: { // field return type
    accountFeedCount: number | null; // Int
    channelFeedCount: number | null; // Int
    domain: string; // String!
    foundAt: NexusGenScalars['DateTime']; // DateTime!
    geoip: NexusGenRootTypes['GeoIp'] | null; // GeoIp
    halfYearActiveUserCount: number | null; // Int
    id: string; // ID!
    monthActiveUserCount: number | null; // Int
    name: string | null; // String
    openRegistrations: boolean | null; // Boolean
    refreshAttemptedAt: NexusGenScalars['DateTime'] | null; // DateTime
    refreshedAt: NexusGenScalars['DateTime'] | null; // DateTime
    serverIps: string[] | null; // [String!]
    softwareName: string | null; // String
    softwareVersion: string | null; // String
    standardizedSoftwareVersion: string | null; // String
    statusesCount: number | null; // Int
    totalUserCount: number | null; // Int
  }
  NodeList: { // field return type
    items: NexusGenRootTypes['Node'][]; // [Node!]!
    paging: NexusGenRootTypes['Paging']; // Paging!
  }
  Paging: { // field return type
    hasNext: boolean; // Boolean!
  }
  Query: { // field return type
    listFeeds: NexusGenRootTypes['FeedList'] | null; // FeedList
    listNodes: NexusGenRootTypes['NodeList'] | null; // NodeList
    listStats: NexusGenRootTypes['StatsList'] | null; // StatsList
  }
  Sorting: { // field return type
    by: string; // String!
    way: NexusGenEnums['SortingWayEnum']; // SortingWayEnum!
  }
  Stats: { // field return type
    accountFeedCount: number; // Int!
    channelFeedCount: number; // Int!
    nodeCount: number; // Int!
    softwareName: string; // String!
  }
  StatsList: { // field return type
    items: NexusGenRootTypes['Stats'][]; // [Stats!]!
  }
}

export interface NexusGenFieldTypeNames {
  Feed: { // field return type name
    avatar: 'String'
    bot: 'Boolean'
    createdAt: 'DateTime'
    description: 'String'
    displayName: 'String'
    domain: 'String'
    fields: 'Field'
    followersCount: 'Int'
    followingCount: 'Int'
    foundAt: 'DateTime'
    id: 'ID'
    lastStatusAt: 'DateTime'
    locked: 'Boolean'
    name: 'String'
    node: 'Node'
    parent: 'Feed'
    refreshedAt: 'DateTime'
    statusesCount: 'Int'
    type: 'FeedTypeEnum'
    url: 'String'
  }
  FeedList: { // field return type name
    items: 'Feed'
    paging: 'Paging'
  }
  Field: { // field return type name
    name: 'String'
    value: 'String'
  }
  GeoIp: { // field return type name
    city_name: 'String'
    continent_name: 'String'
    country_iso_code: 'String'
    country_name: 'String'
    location: 'String'
    region_iso_code: 'String'
    region_name: 'String'
  }
  Node: { // field return type name
    accountFeedCount: 'Int'
    channelFeedCount: 'Int'
    domain: 'String'
    foundAt: 'DateTime'
    geoip: 'GeoIp'
    halfYearActiveUserCount: 'Int'
    id: 'ID'
    monthActiveUserCount: 'Int'
    name: 'String'
    openRegistrations: 'Boolean'
    refreshAttemptedAt: 'DateTime'
    refreshedAt: 'DateTime'
    serverIps: 'String'
    softwareName: 'String'
    softwareVersion: 'String'
    standardizedSoftwareVersion: 'String'
    statusesCount: 'Int'
    totalUserCount: 'Int'
  }
  NodeList: { // field return type name
    items: 'Node'
    paging: 'Paging'
  }
  Paging: { // field return type name
    hasNext: 'Boolean'
  }
  Query: { // field return type name
    listFeeds: 'FeedList'
    listNodes: 'NodeList'
    listStats: 'StatsList'
  }
  Sorting: { // field return type name
    by: 'String'
    way: 'SortingWayEnum'
  }
  Stats: { // field return type name
    accountFeedCount: 'Int'
    channelFeedCount: 'Int'
    nodeCount: 'Int'
    softwareName: 'String'
  }
  StatsList: { // field return type name
    items: 'Stats'
  }
}

export interface NexusGenArgTypes {
  Query: {
    listFeeds: { // args
      paging: NexusGenInputs['PagingInput']; // PagingInput!
      query: NexusGenInputs['FeedQueryInput']; // FeedQueryInput!
    }
    listNodes: { // args
      paging: NexusGenInputs['PagingInput']; // PagingInput!
      query: NexusGenInputs['NodeQueryInput']; // NodeQueryInput!
    }
    listStats: { // args
      query: NexusGenInputs['StatsQueryInput']; // StatsQueryInput!
    }
  }
}

export interface NexusGenAbstractTypeMembers {
}

export interface NexusGenTypeInterfaces {
}

export type NexusGenObjectNames = keyof NexusGenObjects;

export type NexusGenInputNames = keyof NexusGenInputs;

export type NexusGenEnumNames = keyof NexusGenEnums;

export type NexusGenInterfaceNames = never;

export type NexusGenScalarNames = keyof NexusGenScalars;

export type NexusGenUnionNames = never;

export type NexusGenObjectsUsingAbstractStrategyIsTypeOf = never;

export type NexusGenAbstractsUsingStrategyResolveType = never;

export type NexusGenFeaturesConfig = {
  abstractTypeStrategies: {
    isTypeOf: false
    resolveType: true
    __typename: false
  }
}

export interface NexusGenTypes {
  context: Context;
  inputTypes: NexusGenInputs;
  rootTypes: NexusGenRootTypes;
  inputTypeShapes: NexusGenInputs & NexusGenEnums & NexusGenScalars;
  argTypes: NexusGenArgTypes;
  fieldTypes: NexusGenFieldTypes;
  fieldTypeNames: NexusGenFieldTypeNames;
  allTypes: NexusGenAllTypes;
  typeInterfaces: NexusGenTypeInterfaces;
  objectNames: NexusGenObjectNames;
  inputNames: NexusGenInputNames;
  enumNames: NexusGenEnumNames;
  interfaceNames: NexusGenInterfaceNames;
  scalarNames: NexusGenScalarNames;
  unionNames: NexusGenUnionNames;
  allInputTypes: NexusGenTypes['inputNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['scalarNames'];
  allOutputTypes: NexusGenTypes['objectNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['unionNames'] | NexusGenTypes['interfaceNames'] | NexusGenTypes['scalarNames'];
  allNamedTypes: NexusGenTypes['allInputTypes'] | NexusGenTypes['allOutputTypes']
  abstractTypes: NexusGenTypes['interfaceNames'] | NexusGenTypes['unionNames'];
  abstractTypeMembers: NexusGenAbstractTypeMembers;
  objectsUsingAbstractStrategyIsTypeOf: NexusGenObjectsUsingAbstractStrategyIsTypeOf;
  abstractsUsingStrategyResolveType: NexusGenAbstractsUsingStrategyResolveType;
  features: NexusGenFeaturesConfig;
}


declare global {
  interface NexusGenPluginTypeConfig<TypeName extends string> {
  }
  interface NexusGenPluginInputTypeConfig<TypeName extends string> {
  }
  interface NexusGenPluginFieldConfig<TypeName extends string, FieldName extends string> {
  }
  interface NexusGenPluginInputFieldConfig<TypeName extends string, FieldName extends string> {
  }
  interface NexusGenPluginSchemaConfig {
  }
  interface NexusGenPluginArgConfig {
  }
}